/**
 * @file mcp3204_example.cpp
 *
 * @brief Example of using libsetila library on Raspberry Pi for communication with MCP3204 AD converter.
 * An analog signal generated by TMP36 temperature sensor is converted by the MCP3204 to a digital value
 * that is transferred to Raspberry Pi for calculating the actual temperature value.
 *
 * @author Goce Boshkovski
 *
 * @copyright GNU General Public License v3 
 */

#include <iostream>

#include "setila/bdc/CircularBuffer.h"
#include "setila/setila_spi.h"
#include "setila/mcp3204.h"

float TMP36_temperature(float);

int main()
{
	int rc;

	SPI_Bus_Master_Device *spi_bus_master = new SPI_Bus_Master_Device("/dev/spidev0.1");

	MCP3204 *ad_MCP3204 = new MCP3204(2.491);

	if (spi_bus_master->open_bus())
	{
		std::cout << "Failed to open bus master device." << std::endl;
		return -1;
	}

	if (spi_bus_master->configure(SPI_BUS_MODE::MODE_0, MCP3204_SPI_BUS_SPEED, MCP3204_SPI_BITS_PER_WORD, 0))
	{
		std::cout << "Setting SPI bus master parameters failed." << std::endl;
		return -1;
	}
	
	if (ad_MCP3204->attach_to_bus(spi_bus_master))
	{
		std::cout << "Attach to SPI bus master failed." << std::endl;
		return -1;
	}


	rc = ad_MCP3204->convert(MCP3204_INPUT_CHANNEL::CH0, MCP3204_INPUT_CHANNEL_MODE::SINGLE_ENDED);

	if (rc)
	{
		std::cout << "MCP3204 Error: communication error while asking for AD conversion. Error code: " << rc << std::endl;
		return -1;
	}

	std::cout << "Digital value of the sensor reading: " << ad_MCP3204->digital_value() << std::endl;
	std::cout << "Analog value: " << ad_MCP3204->analog_value() << "V" << std::endl;
	std::cout << "Temperature t = " << TMP36_temperature(ad_MCP3204->analog_value()) << "[Â°C]" << std::endl;

	ad_MCP3204->dettach_from_master_bus();

	delete ad_MCP3204;

	spi_bus_master->close_bus();

	delete spi_bus_master;

	return 0;
}

float TMP36_temperature(float voltage_level)
{
	return (voltage_level * 1000 - 500) / 10;
}

